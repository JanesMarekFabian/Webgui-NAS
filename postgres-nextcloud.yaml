# =============================================================================
# SHARED POSTGRESQL FÜR ALLE PROJEKTE
# =============================================================================
# Zentrale PostgreSQL-Instanz für alle Projekte (Nextcloud, Azure B2C, etc.)

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-shared-config
  namespace: shared-services
  labels:
    app: postgres
    component: shared-database
data:
  POSTGRES_DB: "postgres"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "shared_postgres_password_123"
  POSTGRES_MULTIPLE_DATABASES: "nextcloud,azure_b2c_booking,ecommerce_system,crm_system,analytics,dev_tools"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-shared-init
  namespace: shared-services
  labels:
    app: postgres
    component: shared-database
data:
  01-create-shared-databases.sql: |
    -- =============================================================================
    -- SHARED DATABASES FÜR ALLE PROJEKTE
    -- =============================================================================
    
    -- Nextcloud NAS Database
    CREATE DATABASE nextcloud;
    GRANT ALL PRIVILEGES ON DATABASE nextcloud TO postgres;
    COMMENT ON DATABASE nextcloud IS 'Nextcloud NAS Database';
    
    -- Azure B2C Booking System Database
    CREATE DATABASE azure_b2c_booking;
    GRANT ALL PRIVILEGES ON DATABASE azure_b2c_booking TO postgres;
    COMMENT ON DATABASE azure_b2c_booking IS 'Azure B2C Booking System Database';
    
    -- E-Commerce System Database
    CREATE DATABASE ecommerce_system;
    GRANT ALL PRIVILEGES ON DATABASE ecommerce_system TO postgres;
    COMMENT ON DATABASE ecommerce_system IS 'E-Commerce System Database';
    
    -- CRM System Database
    CREATE DATABASE crm_system;
    GRANT ALL PRIVILEGES ON DATABASE crm_system TO postgres;
    COMMENT ON DATABASE crm_system IS 'CRM System Database';
    
    -- Analytics Database
    CREATE DATABASE analytics;
    GRANT ALL PRIVILEGES ON DATABASE analytics TO postgres;
    COMMENT ON DATABASE analytics IS 'Analytics and Reporting Database';
    
    -- Development Tools Database
    CREATE DATABASE dev_tools;
    GRANT ALL PRIVILEGES ON DATABASE dev_tools TO postgres;
    COMMENT ON DATABASE dev_tools IS 'Development Tools and Utilities Database';
    
    -- =============================================================================
    -- PERFORMANCE OPTIMIZATIONS
    -- =============================================================================
    
    -- Performance Settings für alle Datenbanken
    ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_statements';
    ALTER SYSTEM SET max_connections = 200;
    ALTER SYSTEM SET shared_buffers = '512MB';
    ALTER SYSTEM SET effective_cache_size = '2GB';
    ALTER SYSTEM SET maintenance_work_mem = '128MB';
    ALTER SYSTEM SET checkpoint_completion_target = 0.9;
    ALTER SYSTEM SET wal_buffers = '32MB';
    ALTER SYSTEM SET default_statistics_target = 100;
    ALTER SYSTEM SET random_page_cost = 1.1;
    ALTER SYSTEM SET effective_io_concurrency = 200;
    ALTER SYSTEM SET work_mem = '8MB';
    ALTER SYSTEM SET min_wal_size = '2GB';
    ALTER SYSTEM SET max_wal_size = '8GB';
    
    -- Reload configuration
    SELECT pg_reload_conf();
    
    -- =============================================================================
    -- MONITORING SETUP
    -- =============================================================================
    
    -- Enable pg_stat_statements extension for all databases
    \c nextcloud;
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    
    \c azure_b2c_booking;
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    
    \c ecommerce_system;
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    
    \c crm_system;
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    
    \c analytics;
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    
    \c dev_tools;
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-shared-pvc
  namespace: shared-services
  labels:
    app: postgres
    component: shared-database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 72Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-shared
  namespace: shared-services
  labels:
    app: postgres
    component: shared-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      component: shared-database
  template:
    metadata:
      labels:
        app: postgres
        component: shared-database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-shared-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-shared-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: postgres-shared-config
              key: POSTGRES_PASSWORD
        - name: POSTGRES_MULTIPLE_DATABASES
          valueFrom:
            configMapKeyRef:
              name: postgres-shared-config
              key: POSTGRES_MULTIPLE_DATABASES
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -d
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -d
            - postgres
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-shared-pvc
      - name: init-scripts
        configMap:
          name: postgres-shared-init
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: shared-services
  labels:
    app: postgres
    component: shared-database
spec:
  selector:
    app: postgres
    component: shared-database
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP
